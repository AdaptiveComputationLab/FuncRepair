
###########################################
# THIS SCRIPT HAS BEEN AUTOMATICALLY GENERATED BY
#          genprog_setup.bash
###########################################

SHELL:=/bin/bash

BIN:=do_checksum

MYSRC:=patch_ex1.c
MYREP:=repair.c
#MYSRC:=mycoverage.c
#MYSRC:=decompiled_source.c
MYINT:=$(patsubst %.c,%.i, $(MYSRC))
MYOBJ:=$(patsubst %.c,%.o, $(MYSRC))
REPLACEME:=checksum
#EXTERNAL_FUNCS:=--external-funcs $(REPLACEME):<list of functions>
EXTERNAL_FUNCS:=


#external scripts/tools
FUNCREP="${PRD_BASE_DIR}/funcinsert.py"
#DIET_GCC:=${DIET32PATH}/diet_gcc
#DIET_GCC:=${DIET64PATH}/diet_gcc
DIET_GCC:=gcc

# directories
TMPDIR:=tmp
OBJDIR:=depobj
LIBSRC:=libsrc

# expansive Make terms
DEPS:=$(wildcard $(LIBSRC)/*.[csS]) 
IDIRS_:=$(LIBSRC)
INCDIRS:=$(patsubst %,-I%, $(IDIRS_))

# compilation flags
GENPROG_FLAGS:=-DGENPROG -DCGC_32BIT -DCGC_GCC -DCGC_GCC_32BIT -DLINUX 
DEFAULT_FLAGS:=$(GENPROG_FLAGS) -m32 -fPIC -static-pie -shared -z now 
LDFLAGS:=-Wl,-pie,--no-dynamic-linker,--eh-frame-hdr,-z,now,-z,norelro,-T,script.ld,-static

DEP_OBJS:=$(patsubst %.c, $(OBJDIR)/%.o, $(patsubst $(LIBSRC)/%.c, $(OBJDIR)/%.o, $(DEPS) $(MYSRC)))

GENPROG_TMP := $(patsubst $(LIBSRC)/%.c, $(TMPDIR)/%.i, $(DEPS))

$(MYSRC): 
	@touch $(MYSRC)
	@rm -f $(OBJDIR)/$(MYOBJ)
	@rm -f $(MYINT)

.PHONY: $(MYSRC) repair

$(OBJDIR)/$(MYOBJ): $(MYSRC) $(DEP_OBJS)
	@mkdir -p $(OBJDIR)
	@mkdir -p $(TMPDIR)
	$(DIET_GCC) $(DEFAULT_FLAGS) --save-temps -c $< -o $@  $(INCDIRS)
	@mv *.[os] $(TMPDIR)/

$(OBJDIR)/%.o: $(LIBSRC)/%.c 
	@mkdir -p $(OBJDIR)
	@mkdir -p $(TMPDIR)
	$(DIET_GCC) $(DEFAULT_FLAGS) --save-temps -c $< -o $@  $(INCDIRS)
	@mv *.[ios] $(TMPDIR)/
	#mv *.res $(TMPDIR)/
	#mv *.out $(TMPDIR)/

hook: $(OBJDIR)/$(MYOBJ)
	@echo $(DEP_OBJS)
	$(DIET_GCC) $(DEFAULT_FLAGS) -o libhook.so $(DEP_OBJS) $(LDFLAGS) $(INCDIRS)
	@$(DIET_GCC) $(DEFAULT_FLAGS) -o check $(DEP_OBJS) $(LDFLAGS) $(INCDIRS)
	@echo -e "\nChecking for unbound functions or variables => U <func>"
	@nm check | (egrep -w 'U'; [[ "$$?" -ne "0" ]] || (echo "Error! Unbound functions!" && rm check && /bin/false))
	@rm check && echo -e " => SUCCESS! NO Unbound Functions\n"

genprog_cmd:
	@echo --func-repair-script $(FUNCREP) --genprog $(EXTERNAL_FUNCS) 
	@echo --trampoline-compiler-opts $(DEFAULT_FLAGS) $(GENPROG_TMP) $(INCDIR) 
	@echo --trampoline-linker-opts $(LDFLAGS) $(INCDIRS)
	@echo --func-repair-fn-name $(REPLACEME)
	@echo --func-repair-insert $(MYSRC)

#hook:
#	@mkdir -p $(TMPDIR)
#	#gcc decompiled_source.c $(SRC_FILES) $(LIBCFILES) $(CFLAGS) -o libhook.so 
#	diet gcc -m32 -fPIE -static-pie -shared -L . -l:libdependencies.so  -I/home/bss-lab-1/FunctionRepair/FuncRepair/cgc/cb-multios/include -I/home/bss-lab-1/FunctionRepair/FuncRepair/cgc/cb-multios/include/libpov -I/home/bss-lab-1/FunctionRepair/FuncRepair/cgc/cb-multios/include/libpov/pov -I./src -I./lib decompiled_source.c -o libhook.so
#	@mv *.[ios] $(TMPDIR)/
#	@mv *.res $(TMPDIR)/
#	@mv *.out $(TMPDIR)/
#	@mv $(TMPDIR)/decompiled_source.i .

all_c: hook

repair:
	$(DIET_GCC) $(DEFAULT_FLAGS) --save-temps -c $(MYREP) -o $(OBJDIR)/repair.o  $(INCDIRS)
	$(DIET_GCC) $(DEFAULT_FLAGS) -o libhook.so $(OBJDIR)/repair.o $(LDFLAGS) $(INCDIRS)
	$(FUNCREP) --do-not-override-so --bin $(BIN) --outbin $(BIN).repaired --fn $(MYREP) $(REPLACEME) $(EXTERNAL_FUNCS)

funcinsert: hook
	$(FUNCREP) --do-not-override-so --bin $(BIN) --outbin $(BIN).trampoline.bin --fn $(MYSRC) $(REPLACEME) $(EXTERNAL_FUNCS)

clean_genprog:
	rm -f repair.* *.cache coverage.*

clean_temp:
	rm -rf $(TMPDIR) $(OBJDIR)

clean_hook: clean_temp
	rm -f decompiled_source.[ios] decompiled_source.bc libhook.o
	rm -rf $(TMPDIR) $(OBJDIR)

clean: clean_genprog clean_hook
