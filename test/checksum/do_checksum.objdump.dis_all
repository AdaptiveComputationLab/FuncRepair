
./do_checksum:     file format elf64-x86-64
./do_checksum
architecture: i386:x86-64, flags 0x00000150:
HAS_SYMS, DYNAMIC, D_PAGED
start address 0x0000000000001080

Program Header:
    PHDR off    0x0000000000000040 vaddr 0x0000000000000040 paddr 0x0000000000000040 align 2**3
         filesz 0x0000000000000268 memsz 0x0000000000000268 flags r--
  INTERP off    0x00000000000002a8 vaddr 0x00000000000002a8 paddr 0x00000000000002a8 align 2**0
         filesz 0x000000000000001c memsz 0x000000000000001c flags r--
    LOAD off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**12
         filesz 0x0000000000000648 memsz 0x0000000000000648 flags r--
    LOAD off    0x0000000000001000 vaddr 0x0000000000001000 paddr 0x0000000000001000 align 2**12
         filesz 0x00000000000002ad memsz 0x00000000000002ad flags r-x
    LOAD off    0x0000000000002000 vaddr 0x0000000000002000 paddr 0x0000000000002000 align 2**12
         filesz 0x00000000000001b8 memsz 0x00000000000001b8 flags r--
    LOAD off    0x0000000000002da0 vaddr 0x0000000000003da0 paddr 0x0000000000003da0 align 2**12
         filesz 0x0000000000000270 memsz 0x0000000000000280 flags rw-
 DYNAMIC off    0x0000000000002db0 vaddr 0x0000000000003db0 paddr 0x0000000000003db0 align 2**3
         filesz 0x00000000000001f0 memsz 0x00000000000001f0 flags rw-
    NOTE off    0x00000000000002c4 vaddr 0x00000000000002c4 paddr 0x00000000000002c4 align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
EH_FRAME off    0x000000000000204c vaddr 0x000000000000204c paddr 0x000000000000204c align 2**2
         filesz 0x0000000000000044 memsz 0x0000000000000044 flags r--
   STACK off    0x0000000000000000 vaddr 0x0000000000000000 paddr 0x0000000000000000 align 2**4
         filesz 0x0000000000000000 memsz 0x0000000000000000 flags rw-
   RELRO off    0x0000000000002da0 vaddr 0x0000000000003da0 paddr 0x0000000000003da0 align 2**0
         filesz 0x0000000000000260 memsz 0x0000000000000260 flags r--

Dynamic Section:
  NEEDED               libc.so.6
  INIT                 0x0000000000001000
  FINI                 0x00000000000012a4
  INIT_ARRAY           0x0000000000003da0
  INIT_ARRAYSZ         0x0000000000000008
  FINI_ARRAY           0x0000000000003da8
  FINI_ARRAYSZ         0x0000000000000008
  GNU_HASH             0x0000000000000308
  STRTAB               0x0000000000000438
  SYMTAB               0x0000000000000330
  STRSZ                0x000000000000009c
  SYMENT               0x0000000000000018
  DEBUG                0x0000000000000000
  PLTGOT               0x0000000000003fa0
  PLTRELSZ             0x0000000000000060
  PLTREL               0x0000000000000007
  JMPREL               0x00000000000005e8
  RELA                 0x0000000000000510
  RELASZ               0x00000000000000d8
  RELAENT              0x0000000000000018
  FLAGS                0x0000000000000008
  FLAGS_1              0x0000000008000001
  VERNEED              0x00000000000004f0
  VERNEEDNUM           0x0000000000000001
  VERSYM               0x00000000000004d4
  RELACOUNT            0x0000000000000003

Version References:
  required from libc.so.6:
    0x09691a75 0x00 02 GLIBC_2.2.5

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .interp       0000001c  00000000000002a8  00000000000002a8  000002a8  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .note.ABI-tag 00000020  00000000000002c4  00000000000002c4  000002c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .note.gnu.build-id 00000024  00000000000002e4  00000000000002e4  000002e4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .gnu.hash     00000028  0000000000000308  0000000000000308  00000308  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .dynsym       00000108  0000000000000330  0000000000000330  00000330  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .dynstr       0000009c  0000000000000438  0000000000000438  00000438  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .gnu.version  00000016  00000000000004d4  00000000000004d4  000004d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .gnu.version_r 00000020  00000000000004f0  00000000000004f0  000004f0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .rela.dyn     000000d8  0000000000000510  0000000000000510  00000510  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .rela.plt     00000060  00000000000005e8  00000000000005e8  000005e8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 10 .init         00000017  0000000000001000  0000000000001000  00001000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .plt          00000050  0000000000001020  0000000000001020  00001020  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .plt.got      00000008  0000000000001070  0000000000001070  00001070  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .text         00000221  0000000000001080  0000000000001080  00001080  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .fini         00000009  00000000000012a4  00000000000012a4  000012a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .rodata       0000004b  0000000000002000  0000000000002000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .eh_frame_hdr 00000044  000000000000204c  000000000000204c  0000204c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 17 .eh_frame     00000128  0000000000002090  0000000000002090  00002090  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 18 .init_array   00000008  0000000000003da0  0000000000003da0  00002da0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 19 .fini_array   00000008  0000000000003da8  0000000000003da8  00002da8  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 20 .dynamic      000001f0  0000000000003db0  0000000000003db0  00002db0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 21 .got          00000060  0000000000003fa0  0000000000003fa0  00002fa0  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 22 .data         00000010  0000000000004000  0000000000004000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 23 .bss          00000010  0000000000004010  0000000000004010  00003010  2**3
                  ALLOC
 24 .comment      0000002b  0000000000000000  0000000000000000  00003010  2**0
                  CONTENTS, READONLY
 25 .debug_aranges 00000030  0000000000000000  0000000000000000  0000303b  2**0
                  CONTENTS, READONLY, DEBUGGING
 26 .debug_info   00000373  0000000000000000  0000000000000000  0000306b  2**0
                  CONTENTS, READONLY, DEBUGGING
 27 .debug_abbrev 0000011f  0000000000000000  0000000000000000  000033de  2**0
                  CONTENTS, READONLY, DEBUGGING
 28 .debug_line   00000153  0000000000000000  0000000000000000  000034fd  2**0
                  CONTENTS, READONLY, DEBUGGING
 29 .debug_str    0000028d  0000000000000000  0000000000000000  00003650  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00000000000002a8 l    d  .interp	0000000000000000              .interp
00000000000002c4 l    d  .note.ABI-tag	0000000000000000              .note.ABI-tag
00000000000002e4 l    d  .note.gnu.build-id	0000000000000000              .note.gnu.build-id
0000000000000308 l    d  .gnu.hash	0000000000000000              .gnu.hash
0000000000000330 l    d  .dynsym	0000000000000000              .dynsym
0000000000000438 l    d  .dynstr	0000000000000000              .dynstr
00000000000004d4 l    d  .gnu.version	0000000000000000              .gnu.version
00000000000004f0 l    d  .gnu.version_r	0000000000000000              .gnu.version_r
0000000000000510 l    d  .rela.dyn	0000000000000000              .rela.dyn
00000000000005e8 l    d  .rela.plt	0000000000000000              .rela.plt
0000000000001000 l    d  .init	0000000000000000              .init
0000000000001020 l    d  .plt	0000000000000000              .plt
0000000000001070 l    d  .plt.got	0000000000000000              .plt.got
0000000000001080 l    d  .text	0000000000000000              .text
00000000000012a4 l    d  .fini	0000000000000000              .fini
0000000000002000 l    d  .rodata	0000000000000000              .rodata
000000000000204c l    d  .eh_frame_hdr	0000000000000000              .eh_frame_hdr
0000000000002090 l    d  .eh_frame	0000000000000000              .eh_frame
0000000000003da0 l    d  .init_array	0000000000000000              .init_array
0000000000003da8 l    d  .fini_array	0000000000000000              .fini_array
0000000000003db0 l    d  .dynamic	0000000000000000              .dynamic
0000000000003fa0 l    d  .got	0000000000000000              .got
0000000000004000 l    d  .data	0000000000000000              .data
0000000000004010 l    d  .bss	0000000000000000              .bss
0000000000000000 l    d  .comment	0000000000000000              .comment
0000000000000000 l    d  .debug_aranges	0000000000000000              .debug_aranges
0000000000000000 l    d  .debug_info	0000000000000000              .debug_info
0000000000000000 l    d  .debug_abbrev	0000000000000000              .debug_abbrev
0000000000000000 l    d  .debug_line	0000000000000000              .debug_line
0000000000000000 l    d  .debug_str	0000000000000000              .debug_str
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000010b0 l     F .text	0000000000000000              deregister_tm_clones
00000000000010e0 l     F .text	0000000000000000              register_tm_clones
0000000000001120 l     F .text	0000000000000000              __do_global_dtors_aux
0000000000004018 l     O .bss	0000000000000001              completed.7931
0000000000003da8 l     O .fini_array	0000000000000000              __do_global_dtors_aux_fini_array_entry
0000000000001160 l     F .text	0000000000000000              frame_dummy
0000000000003da0 l     O .init_array	0000000000000000              __frame_dummy_init_array_entry
0000000000000000 l    df *ABS*	0000000000000000              do_checksum.c
0000000000000000 l    df *ABS*	0000000000000000              crtstuff.c
00000000000021b4 l     O .eh_frame	0000000000000000              __FRAME_END__
0000000000000000 l    df *ABS*	0000000000000000              
0000000000003da8 l       .init_array	0000000000000000              __init_array_end
0000000000003db0 l     O .dynamic	0000000000000000              _DYNAMIC
0000000000003da0 l       .init_array	0000000000000000              __init_array_start
000000000000204c l       .eh_frame_hdr	0000000000000000              __GNU_EH_FRAME_HDR
0000000000003fa0 l     O .got	0000000000000000              _GLOBAL_OFFSET_TABLE_
0000000000001000 l     F .init	0000000000000000              _init
00000000000012a0 g     F .text	0000000000000001              __libc_csu_fini
0000000000000000  w      *UND*	0000000000000000              _ITM_deregisterTMCloneTable
0000000000004010 g     O .bss	0000000000000008              stdout@@GLIBC_2.2.5
0000000000004000  w      .data	0000000000000000              data_start
0000000000000000       F *UND*	0000000000000000              puts@@GLIBC_2.2.5
0000000000004010 g       .data	0000000000000000              _edata
00000000000012a4 g     F .fini	0000000000000000              .hidden _fini
0000000000000000       F *UND*	0000000000000000              printf@@GLIBC_2.2.5
0000000000001165 g     F .text	0000000000000046              checksum
0000000000000000       F *UND*	0000000000000000              __libc_start_main@@GLIBC_2.2.5
0000000000004000 g       .data	0000000000000000              __data_start
0000000000000000  w      *UND*	0000000000000000              __gmon_start__
0000000000004008 g     O .data	0000000000000000              .hidden __dso_handle
0000000000002000 g     O .rodata	0000000000000004              _IO_stdin_used
0000000000001240 g     F .text	000000000000005d              __libc_csu_init
0000000000000000       F *UND*	0000000000000000              fflush@@GLIBC_2.2.5
0000000000004020 g       .bss	0000000000000000              _end
0000000000001080 g     F .text	000000000000002b              _start
0000000000004010 g       .bss	0000000000000000              __bss_start
00000000000011ab g     F .text	0000000000000091              main
0000000000000000       F *UND*	0000000000000000              exit@@GLIBC_2.2.5
0000000000004010 g     O .data	0000000000000000              .hidden __TMC_END__
0000000000000000  w      *UND*	0000000000000000              _ITM_registerTMCloneTable
0000000000000000  w    F *UND*	0000000000000000              __cxa_finalize@@GLIBC_2.2.5



Disassembly of section .init:

0000000000001000 <_init>:
    1000:	48 83 ec 08          	sub    $0x8,%rsp
    1004:	48 8b 05 dd 2f 00 00 	mov    0x2fdd(%rip),%rax        # 3fe8 <__gmon_start__>
    100b:	48 85 c0             	test   %rax,%rax
    100e:	74 02                	je     1012 <_init+0x12>
    1010:	ff d0                	callq  *%rax
    1012:	48 83 c4 08          	add    $0x8,%rsp
    1016:	c3                   	retq   

Disassembly of section .plt:

0000000000001020 <.plt>:
    1020:	ff 35 82 2f 00 00    	pushq  0x2f82(%rip)        # 3fa8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 84 2f 00 00    	jmpq   *0x2f84(%rip)        # 3fb0 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <puts@plt>:
    1030:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3fb8 <puts@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	pushq  $0x0
    103b:	e9 e0 ff ff ff       	jmpq   1020 <.plt>

0000000000001040 <printf@plt>:
    1040:	ff 25 7a 2f 00 00    	jmpq   *0x2f7a(%rip)        # 3fc0 <printf@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	pushq  $0x1
    104b:	e9 d0 ff ff ff       	jmpq   1020 <.plt>

0000000000001050 <fflush@plt>:
    1050:	ff 25 72 2f 00 00    	jmpq   *0x2f72(%rip)        # 3fc8 <fflush@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	pushq  $0x2
    105b:	e9 c0 ff ff ff       	jmpq   1020 <.plt>

0000000000001060 <exit@plt>:
    1060:	ff 25 6a 2f 00 00    	jmpq   *0x2f6a(%rip)        # 3fd0 <exit@GLIBC_2.2.5>
    1066:	68 03 00 00 00       	pushq  $0x3
    106b:	e9 b0 ff ff ff       	jmpq   1020 <.plt>

Disassembly of section .plt.got:

0000000000001070 <__cxa_finalize@plt>:
    1070:	ff 25 82 2f 00 00    	jmpq   *0x2f82(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1076:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001080 <_start>:
    1080:	31 ed                	xor    %ebp,%ebp
    1082:	49 89 d1             	mov    %rdx,%r9
    1085:	5e                   	pop    %rsi
    1086:	48 89 e2             	mov    %rsp,%rdx
    1089:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    108d:	50                   	push   %rax
    108e:	54                   	push   %rsp
    108f:	4c 8d 05 0a 02 00 00 	lea    0x20a(%rip),%r8        # 12a0 <__libc_csu_fini>
    1096:	48 8d 0d a3 01 00 00 	lea    0x1a3(%rip),%rcx        # 1240 <__libc_csu_init>
    109d:	48 8d 3d 07 01 00 00 	lea    0x107(%rip),%rdi        # 11ab <main>
    10a4:	ff 15 36 2f 00 00    	callq  *0x2f36(%rip)        # 3fe0 <__libc_start_main@GLIBC_2.2.5>
    10aa:	f4                   	hlt    
    10ab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000010b0 <deregister_tm_clones>:
    10b0:	48 8d 3d 59 2f 00 00 	lea    0x2f59(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    10b7:	48 8d 05 52 2f 00 00 	lea    0x2f52(%rip),%rax        # 4010 <stdout@@GLIBC_2.2.5>
    10be:	48 39 f8             	cmp    %rdi,%rax
    10c1:	74 15                	je     10d8 <deregister_tm_clones+0x28>
    10c3:	48 8b 05 0e 2f 00 00 	mov    0x2f0e(%rip),%rax        # 3fd8 <_ITM_deregisterTMCloneTable>
    10ca:	48 85 c0             	test   %rax,%rax
    10cd:	74 09                	je     10d8 <deregister_tm_clones+0x28>
    10cf:	ff e0                	jmpq   *%rax
    10d1:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    10d8:	c3                   	retq   
    10d9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000010e0 <register_tm_clones>:
    10e0:	48 8d 3d 29 2f 00 00 	lea    0x2f29(%rip),%rdi        # 4010 <stdout@@GLIBC_2.2.5>
    10e7:	48 8d 35 22 2f 00 00 	lea    0x2f22(%rip),%rsi        # 4010 <stdout@@GLIBC_2.2.5>
    10ee:	48 29 fe             	sub    %rdi,%rsi
    10f1:	48 c1 fe 03          	sar    $0x3,%rsi
    10f5:	48 89 f0             	mov    %rsi,%rax
    10f8:	48 c1 e8 3f          	shr    $0x3f,%rax
    10fc:	48 01 c6             	add    %rax,%rsi
    10ff:	48 d1 fe             	sar    %rsi
    1102:	74 14                	je     1118 <register_tm_clones+0x38>
    1104:	48 8b 05 e5 2e 00 00 	mov    0x2ee5(%rip),%rax        # 3ff0 <_ITM_registerTMCloneTable>
    110b:	48 85 c0             	test   %rax,%rax
    110e:	74 08                	je     1118 <register_tm_clones+0x38>
    1110:	ff e0                	jmpq   *%rax
    1112:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1118:	c3                   	retq   
    1119:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001120 <__do_global_dtors_aux>:
    1120:	80 3d f1 2e 00 00 00 	cmpb   $0x0,0x2ef1(%rip)        # 4018 <completed.7931>
    1127:	75 2f                	jne    1158 <__do_global_dtors_aux+0x38>
    1129:	55                   	push   %rbp
    112a:	48 83 3d c6 2e 00 00 	cmpq   $0x0,0x2ec6(%rip)        # 3ff8 <__cxa_finalize@GLIBC_2.2.5>
    1131:	00 
    1132:	48 89 e5             	mov    %rsp,%rbp
    1135:	74 0c                	je     1143 <__do_global_dtors_aux+0x23>
    1137:	48 8b 3d ca 2e 00 00 	mov    0x2eca(%rip),%rdi        # 4008 <__dso_handle>
    113e:	e8 2d ff ff ff       	callq  1070 <__cxa_finalize@plt>
    1143:	e8 68 ff ff ff       	callq  10b0 <deregister_tm_clones>
    1148:	c6 05 c9 2e 00 00 01 	movb   $0x1,0x2ec9(%rip)        # 4018 <completed.7931>
    114f:	5d                   	pop    %rbp
    1150:	c3                   	retq   
    1151:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1158:	c3                   	retq   
    1159:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001160 <frame_dummy>:
    1160:	e9 7b ff ff ff       	jmpq   10e0 <register_tm_clones>

0000000000001165 <checksum>:
    1165:	55                   	push   %rbp
    1166:	48 89 e5             	mov    %rsp,%rbp
    1169:	48 83 ec 20          	sub    $0x20,%rsp
    116d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
    1171:	48 8d 3d 8c 0e 00 00 	lea    0xe8c(%rip),%rdi        # 2004 <_IO_stdin_used+0x4>
    1178:	e8 b3 fe ff ff       	callq  1030 <puts@plt>
    117d:	c6 45 ff ff          	movb   $0xff,-0x1(%rbp)
    1181:	eb 17                	jmp    119a <checksum+0x35>
    1183:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    1187:	0f b6 00             	movzbl (%rax),%eax
    118a:	89 c2                	mov    %eax,%edx
    118c:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    1190:	01 d0                	add    %edx,%eax
    1192:	88 45 ff             	mov    %al,-0x1(%rbp)
    1195:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
    119a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
    119e:	0f b6 00             	movzbl (%rax),%eax
    11a1:	84 c0                	test   %al,%al
    11a3:	75 de                	jne    1183 <checksum+0x1e>
    11a5:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    11a9:	c9                   	leaveq 
    11aa:	c3                   	retq   

00000000000011ab <main>:
    11ab:	55                   	push   %rbp
    11ac:	48 89 e5             	mov    %rsp,%rbp
    11af:	48 83 ec 10          	sub    $0x10,%rsp
    11b3:	89 7d fc             	mov    %edi,-0x4(%rbp)
    11b6:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
    11ba:	48 8d 3d 55 0e 00 00 	lea    0xe55(%rip),%rdi        # 2016 <_IO_stdin_used+0x16>
    11c1:	e8 6a fe ff ff       	callq  1030 <puts@plt>
    11c6:	48 8b 05 43 2e 00 00 	mov    0x2e43(%rip),%rax        # 4010 <stdout@@GLIBC_2.2.5>
    11cd:	48 89 c7             	mov    %rax,%rdi
    11d0:	e8 7b fe ff ff       	callq  1050 <fflush@plt>
    11d5:	83 7d fc 02          	cmpl   $0x2,-0x4(%rbp)
    11d9:	74 25                	je     1200 <main+0x55>
    11db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    11df:	48 8b 00             	mov    (%rax),%rax
    11e2:	48 89 c6             	mov    %rax,%rsi
    11e5:	48 8d 3d 37 0e 00 00 	lea    0xe37(%rip),%rdi        # 2023 <_IO_stdin_used+0x23>
    11ec:	b8 00 00 00 00       	mov    $0x0,%eax
    11f1:	e8 4a fe ff ff       	callq  1040 <printf@plt>
    11f6:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    11fb:	e8 60 fe ff ff       	callq  1060 <exit@plt>
    1200:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    1204:	48 83 c0 08          	add    $0x8,%rax
    1208:	48 8b 00             	mov    (%rax),%rax
    120b:	48 89 c7             	mov    %rax,%rdi
    120e:	e8 52 ff ff ff       	callq  1165 <checksum>
    1213:	0f be d0             	movsbl %al,%edx
    1216:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
    121a:	48 83 c0 08          	add    $0x8,%rax
    121e:	48 8b 00             	mov    (%rax),%rax
    1221:	48 89 c6             	mov    %rax,%rsi
    1224:	48 8d 3d 0d 0e 00 00 	lea    0xe0d(%rip),%rdi        # 2038 <_IO_stdin_used+0x38>
    122b:	b8 00 00 00 00       	mov    $0x0,%eax
    1230:	e8 0b fe ff ff       	callq  1040 <printf@plt>
    1235:	b8 00 00 00 00       	mov    $0x0,%eax
    123a:	c9                   	leaveq 
    123b:	c3                   	retq   
    123c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001240 <__libc_csu_init>:
    1240:	41 57                	push   %r15
    1242:	49 89 d7             	mov    %rdx,%r15
    1245:	41 56                	push   %r14
    1247:	49 89 f6             	mov    %rsi,%r14
    124a:	41 55                	push   %r13
    124c:	41 89 fd             	mov    %edi,%r13d
    124f:	41 54                	push   %r12
    1251:	4c 8d 25 48 2b 00 00 	lea    0x2b48(%rip),%r12        # 3da0 <__frame_dummy_init_array_entry>
    1258:	55                   	push   %rbp
    1259:	48 8d 2d 48 2b 00 00 	lea    0x2b48(%rip),%rbp        # 3da8 <__init_array_end>
    1260:	53                   	push   %rbx
    1261:	4c 29 e5             	sub    %r12,%rbp
    1264:	48 83 ec 08          	sub    $0x8,%rsp
    1268:	e8 93 fd ff ff       	callq  1000 <_init>
    126d:	48 c1 fd 03          	sar    $0x3,%rbp
    1271:	74 1b                	je     128e <__libc_csu_init+0x4e>
    1273:	31 db                	xor    %ebx,%ebx
    1275:	0f 1f 00             	nopl   (%rax)
    1278:	4c 89 fa             	mov    %r15,%rdx
    127b:	4c 89 f6             	mov    %r14,%rsi
    127e:	44 89 ef             	mov    %r13d,%edi
    1281:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
    1285:	48 83 c3 01          	add    $0x1,%rbx
    1289:	48 39 dd             	cmp    %rbx,%rbp
    128c:	75 ea                	jne    1278 <__libc_csu_init+0x38>
    128e:	48 83 c4 08          	add    $0x8,%rsp
    1292:	5b                   	pop    %rbx
    1293:	5d                   	pop    %rbp
    1294:	41 5c                	pop    %r12
    1296:	41 5d                	pop    %r13
    1298:	41 5e                	pop    %r14
    129a:	41 5f                	pop    %r15
    129c:	c3                   	retq   
    129d:	0f 1f 00             	nopl   (%rax)

00000000000012a0 <__libc_csu_fini>:
    12a0:	c3                   	retq   

Disassembly of section .fini:

00000000000012a4 <_fini>:
    12a4:	48 83 ec 08          	sub    $0x8,%rsp
    12a8:	48 83 c4 08          	add    $0x8,%rsp
    12ac:	c3                   	retq   
